generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String
  authId    String     @unique
  image     String     @default("")
  recipes   Recipe[]   @relation(name: "CreatedRecipe")
  favorites Favorite[] @relation(name: "favorated")
  Ratings   Rating[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Recipe {
  id           String       @id @default(cuid())
  title        String
  description  String       @default("")
  image        String       @default("")
  cookTime     Int          @default(10)
  noOfServings Int          @default(1)
  published    Boolean      @default(false)
  difficulty   Difficulty   @default(Easy)
  category     String       @default("Curry")
  calories     Int          @default(100)
  ingredients  Ingredient[]
  user         User         @relation(name: "CreatedRecipe", fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  favorated    Favorite[]   @relation(name: "favorated")
  steps        Step[]
  Ratings      Rating[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Difficulty {
  Easy
  Medium
  Hard
}

model Rating {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipeId  String
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  stars     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(name: "favorated", fields: [userId], references: [id], onDelete: Cascade)
  recipeId  String
  recipe    Recipe   @relation(name: "favorated", fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Step {
  id          String   @id @default(cuid())
  recipeId    String
  recipe      Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  step        Int
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Ingredient {
  id           String   @id @default(cuid())
  recipeId     String
  recipe       Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  name         String
  quantity     Int
  quantityType String   @default("Unit")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
